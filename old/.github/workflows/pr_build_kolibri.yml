name: Kolibri Build Assets for Pull Request

on: pull_request

jobs:
  prnumber:
    # The workflow_run event can't access the pull request
    # information unless the pull request comes from a non-fork
    # repository. Therefore to get the pull request information,
    # we need to store it as a workflow artifact in this workflow.
    # Implementation taken from:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir -p ./pr
          echo $PR_NUMBER > ./pr/pr_number
      - uses: actions/upload-artifact@v4
        with:
          name: pr_number
          path: pr/
  whl:
    name: Build WHL file
    uses: ./.github/workflows/build_whl.yml
  pex:
    name: Build PEX file
    needs: whl
    uses: ./.github/workflows/build_pex.yml
    with:
      whl-file-name: ${{ needs.whl.outputs.whl-file-name }}
  dmg:
    name: Build DMG file
    needs: whl
    uses: learningequality/kolibri-app/.github/workflows/build_mac.yml@v0.4.3
    with:
      whl-file-name: ${{ needs.whl.outputs.whl-file-name }}
      ref: v0.4.3
  deb:
    name: Build DEB file
    needs: whl
    uses: learningequality/kolibri-installer-debian/.github/workflows/build_deb.yml@v0.18.0
    with:
      tar-file-name: ${{ needs.whl.outputs.tar-file-name }}
      ref: v0.16.1
  exe:
    name: Build EXE file
    needs: whl
    uses: learningequality/kolibri-installer-windows/.github/workflows/build_exe.yml@v1.6.6
    with:
      whl-file-name: ${{ needs.whl.outputs.whl-file-name }}
      ref: v1.6.6
  apk:
    name: Build APK file
    needs: whl
    uses: learningequality/kolibri-installer-android/.github/workflows/build_apk.yml@v0.1.4
    with:
      tar-file-name: ${{ needs.whl.outputs.tar-file-name }}
      ref: v0.1.4
  zip:
    name: Build Raspberry Pi Image
    needs: deb
    uses: learningequality/kolibri-image-pi/.github/workflows/build_img.yml@v1.0.0
    with:
      deb-file-name: ${{ needs.deb.outputs.deb-file-name }}
      ref: v1.0.0
  test_whl_file:
    name: Test WHL file
    needs: whl
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11', '3.12', '3.13']
        cext: [true, false]
    runs-on: ubuntu-latest
    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.whl.outputs.whl-file-name }}
          path: dist
      - name: Install WHL file
        run: pip install dist/${{ needs.whl.outputs.whl-file-name }}
      - name: Smoke test WHL file
        env:
          KOLIBRI_NO_C_EXTENSIONS: ${{ matrix.cext == false && '1' || '' }}
        run: kolibri configure setup
  test_whl_file_eol_python:
    name: Test WHL file with EOL Python versions
    needs: whl
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        cext: [true, false]
    runs-on: ubuntu-latest
    container:
      image: python:${{ matrix.python-version }}-buster
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.whl.outputs.whl-file-name }}
          path: dist
      - name: Install WHL file
        run: pip install dist/${{ needs.whl.outputs.whl-file-name }}
      - name: Smoke test WHL file
        env:
          KOLIBRI_NO_C_EXTENSIONS: ${{ matrix.cext == false && '1' || '' }}
        run: kolibri configure setup
